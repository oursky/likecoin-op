// Code generated by ent, DO NOT EDIT.

package ent

import (
	"likenft-indexer/ent/evmevent"
	"likenft-indexer/ent/nft"
	"likenft-indexer/ent/nftclass"
	"likenft-indexer/ent/schema"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	evmeventFields := schema.EVMEvent{}.Fields()
	_ = evmeventFields
	// evmeventDescTransactionHash is the schema descriptor for transaction_hash field.
	evmeventDescTransactionHash := evmeventFields[0].Descriptor()
	// evmevent.TransactionHashValidator is a validator for the "transaction_hash" field. It is called by the builders before save.
	evmevent.TransactionHashValidator = evmeventDescTransactionHash.Validators[0].(func(string) error)
	// evmeventDescBlockHash is the schema descriptor for block_hash field.
	evmeventDescBlockHash := evmeventFields[1].Descriptor()
	// evmevent.BlockHashValidator is a validator for the "block_hash" field. It is called by the builders before save.
	evmevent.BlockHashValidator = evmeventDescBlockHash.Validators[0].(func(string) error)
	// evmeventDescAddress is the schema descriptor for address field.
	evmeventDescAddress := evmeventFields[4].Descriptor()
	// evmevent.AddressValidator is a validator for the "address" field. It is called by the builders before save.
	evmevent.AddressValidator = evmeventDescAddress.Validators[0].(func(string) error)
	// evmeventDescTopic0 is the schema descriptor for topic0 field.
	evmeventDescTopic0 := evmeventFields[5].Descriptor()
	// evmevent.Topic0Validator is a validator for the "topic0" field. It is called by the builders before save.
	evmevent.Topic0Validator = evmeventDescTopic0.Validators[0].(func(string) error)
	nftFields := schema.NFT{}.Fields()
	_ = nftFields
	// nftDescName is the schema descriptor for name field.
	nftDescName := nftFields[3].Descriptor()
	// nft.NameValidator is a validator for the "name" field. It is called by the builders before save.
	nft.NameValidator = nftDescName.Validators[0].(func(string) error)
	// nftDescOwnerAddress is the schema descriptor for owner_address field.
	nftDescOwnerAddress := nftFields[7].Descriptor()
	// nft.OwnerAddressValidator is a validator for the "owner_address" field. It is called by the builders before save.
	nft.OwnerAddressValidator = nftDescOwnerAddress.Validators[0].(func(string) error)
	nftclassFields := schema.NFTClass{}.Fields()
	_ = nftclassFields
	// nftclassDescName is the schema descriptor for name field.
	nftclassDescName := nftclassFields[1].Descriptor()
	// nftclass.NameValidator is a validator for the "name" field. It is called by the builders before save.
	nftclass.NameValidator = nftclassDescName.Validators[0].(func(string) error)
	// nftclassDescSymbol is the schema descriptor for symbol field.
	nftclassDescSymbol := nftclassFields[2].Descriptor()
	// nftclass.SymbolValidator is a validator for the "symbol" field. It is called by the builders before save.
	nftclass.SymbolValidator = nftclassDescSymbol.Validators[0].(func(string) error)
	// nftclassDescTotalSupply is the schema descriptor for total_supply field.
	nftclassDescTotalSupply := nftclassFields[5].Descriptor()
	// nftclass.TotalSupplyValidator is a validator for the "total_supply" field. It is called by the builders before save.
	nftclass.TotalSupplyValidator = nftclassDescTotalSupply.Validators[0].(func(int) error)
	// nftclassDescBannerImage is the schema descriptor for banner_image field.
	nftclassDescBannerImage := nftclassFields[7].Descriptor()
	// nftclass.BannerImageValidator is a validator for the "banner_image" field. It is called by the builders before save.
	nftclass.BannerImageValidator = nftclassDescBannerImage.Validators[0].(func(string) error)
	// nftclassDescFeaturedImage is the schema descriptor for featured_image field.
	nftclassDescFeaturedImage := nftclassFields[8].Descriptor()
	// nftclass.FeaturedImageValidator is a validator for the "featured_image" field. It is called by the builders before save.
	nftclass.FeaturedImageValidator = nftclassDescFeaturedImage.Validators[0].(func(string) error)
	// nftclassDescDeployerAddress is the schema descriptor for deployer_address field.
	nftclassDescDeployerAddress := nftclassFields[9].Descriptor()
	// nftclass.DeployerAddressValidator is a validator for the "deployer_address" field. It is called by the builders before save.
	nftclass.DeployerAddressValidator = nftclassDescDeployerAddress.Validators[0].(func(string) error)
	// nftclassDescDeployedBlockNumber is the schema descriptor for deployed_block_number field.
	nftclassDescDeployedBlockNumber := nftclassFields[10].Descriptor()
	// nftclass.DeployedBlockNumberValidator is a validator for the "deployed_block_number" field. It is called by the builders before save.
	nftclass.DeployedBlockNumberValidator = nftclassDescDeployedBlockNumber.Validators[0].(func(string) error)
}
