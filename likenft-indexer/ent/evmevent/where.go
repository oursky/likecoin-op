// Code generated by ent, DO NOT EDIT.

package evmevent

import (
	"likenft-indexer/ent/predicate"
	"time"

	"entgo.io/ent/dialect/sql"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.EVMEvent {
	return predicate.EVMEvent(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.EVMEvent {
	return predicate.EVMEvent(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.EVMEvent {
	return predicate.EVMEvent(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.EVMEvent {
	return predicate.EVMEvent(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.EVMEvent {
	return predicate.EVMEvent(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.EVMEvent {
	return predicate.EVMEvent(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.EVMEvent {
	return predicate.EVMEvent(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.EVMEvent {
	return predicate.EVMEvent(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.EVMEvent {
	return predicate.EVMEvent(sql.FieldLTE(FieldID, id))
}

// TransactionHash applies equality check predicate on the "transaction_hash" field. It's identical to TransactionHashEQ.
func TransactionHash(v string) predicate.EVMEvent {
	return predicate.EVMEvent(sql.FieldEQ(FieldTransactionHash, v))
}

// BlockHash applies equality check predicate on the "block_hash" field. It's identical to BlockHashEQ.
func BlockHash(v string) predicate.EVMEvent {
	return predicate.EVMEvent(sql.FieldEQ(FieldBlockHash, v))
}

// BlockNumber applies equality check predicate on the "block_number" field. It's identical to BlockNumberEQ.
func BlockNumber(v uint64) predicate.EVMEvent {
	return predicate.EVMEvent(sql.FieldEQ(FieldBlockNumber, v))
}

// LogIndex applies equality check predicate on the "log_index" field. It's identical to LogIndexEQ.
func LogIndex(v uint64) predicate.EVMEvent {
	return predicate.EVMEvent(sql.FieldEQ(FieldLogIndex, v))
}

// Address applies equality check predicate on the "address" field. It's identical to AddressEQ.
func Address(v string) predicate.EVMEvent {
	return predicate.EVMEvent(sql.FieldEQ(FieldAddress, v))
}

// Topic0 applies equality check predicate on the "topic0" field. It's identical to Topic0EQ.
func Topic0(v string) predicate.EVMEvent {
	return predicate.EVMEvent(sql.FieldEQ(FieldTopic0, v))
}

// Topic1 applies equality check predicate on the "topic1" field. It's identical to Topic1EQ.
func Topic1(v string) predicate.EVMEvent {
	return predicate.EVMEvent(sql.FieldEQ(FieldTopic1, v))
}

// Topic2 applies equality check predicate on the "topic2" field. It's identical to Topic2EQ.
func Topic2(v string) predicate.EVMEvent {
	return predicate.EVMEvent(sql.FieldEQ(FieldTopic2, v))
}

// Topic3 applies equality check predicate on the "topic3" field. It's identical to Topic3EQ.
func Topic3(v string) predicate.EVMEvent {
	return predicate.EVMEvent(sql.FieldEQ(FieldTopic3, v))
}

// Data applies equality check predicate on the "data" field. It's identical to DataEQ.
func Data(v string) predicate.EVMEvent {
	return predicate.EVMEvent(sql.FieldEQ(FieldData, v))
}

// Timestamp applies equality check predicate on the "timestamp" field. It's identical to TimestampEQ.
func Timestamp(v time.Time) predicate.EVMEvent {
	return predicate.EVMEvent(sql.FieldEQ(FieldTimestamp, v))
}

// TransactionHashEQ applies the EQ predicate on the "transaction_hash" field.
func TransactionHashEQ(v string) predicate.EVMEvent {
	return predicate.EVMEvent(sql.FieldEQ(FieldTransactionHash, v))
}

// TransactionHashNEQ applies the NEQ predicate on the "transaction_hash" field.
func TransactionHashNEQ(v string) predicate.EVMEvent {
	return predicate.EVMEvent(sql.FieldNEQ(FieldTransactionHash, v))
}

// TransactionHashIn applies the In predicate on the "transaction_hash" field.
func TransactionHashIn(vs ...string) predicate.EVMEvent {
	return predicate.EVMEvent(sql.FieldIn(FieldTransactionHash, vs...))
}

// TransactionHashNotIn applies the NotIn predicate on the "transaction_hash" field.
func TransactionHashNotIn(vs ...string) predicate.EVMEvent {
	return predicate.EVMEvent(sql.FieldNotIn(FieldTransactionHash, vs...))
}

// TransactionHashGT applies the GT predicate on the "transaction_hash" field.
func TransactionHashGT(v string) predicate.EVMEvent {
	return predicate.EVMEvent(sql.FieldGT(FieldTransactionHash, v))
}

// TransactionHashGTE applies the GTE predicate on the "transaction_hash" field.
func TransactionHashGTE(v string) predicate.EVMEvent {
	return predicate.EVMEvent(sql.FieldGTE(FieldTransactionHash, v))
}

// TransactionHashLT applies the LT predicate on the "transaction_hash" field.
func TransactionHashLT(v string) predicate.EVMEvent {
	return predicate.EVMEvent(sql.FieldLT(FieldTransactionHash, v))
}

// TransactionHashLTE applies the LTE predicate on the "transaction_hash" field.
func TransactionHashLTE(v string) predicate.EVMEvent {
	return predicate.EVMEvent(sql.FieldLTE(FieldTransactionHash, v))
}

// TransactionHashContains applies the Contains predicate on the "transaction_hash" field.
func TransactionHashContains(v string) predicate.EVMEvent {
	return predicate.EVMEvent(sql.FieldContains(FieldTransactionHash, v))
}

// TransactionHashHasPrefix applies the HasPrefix predicate on the "transaction_hash" field.
func TransactionHashHasPrefix(v string) predicate.EVMEvent {
	return predicate.EVMEvent(sql.FieldHasPrefix(FieldTransactionHash, v))
}

// TransactionHashHasSuffix applies the HasSuffix predicate on the "transaction_hash" field.
func TransactionHashHasSuffix(v string) predicate.EVMEvent {
	return predicate.EVMEvent(sql.FieldHasSuffix(FieldTransactionHash, v))
}

// TransactionHashEqualFold applies the EqualFold predicate on the "transaction_hash" field.
func TransactionHashEqualFold(v string) predicate.EVMEvent {
	return predicate.EVMEvent(sql.FieldEqualFold(FieldTransactionHash, v))
}

// TransactionHashContainsFold applies the ContainsFold predicate on the "transaction_hash" field.
func TransactionHashContainsFold(v string) predicate.EVMEvent {
	return predicate.EVMEvent(sql.FieldContainsFold(FieldTransactionHash, v))
}

// BlockHashEQ applies the EQ predicate on the "block_hash" field.
func BlockHashEQ(v string) predicate.EVMEvent {
	return predicate.EVMEvent(sql.FieldEQ(FieldBlockHash, v))
}

// BlockHashNEQ applies the NEQ predicate on the "block_hash" field.
func BlockHashNEQ(v string) predicate.EVMEvent {
	return predicate.EVMEvent(sql.FieldNEQ(FieldBlockHash, v))
}

// BlockHashIn applies the In predicate on the "block_hash" field.
func BlockHashIn(vs ...string) predicate.EVMEvent {
	return predicate.EVMEvent(sql.FieldIn(FieldBlockHash, vs...))
}

// BlockHashNotIn applies the NotIn predicate on the "block_hash" field.
func BlockHashNotIn(vs ...string) predicate.EVMEvent {
	return predicate.EVMEvent(sql.FieldNotIn(FieldBlockHash, vs...))
}

// BlockHashGT applies the GT predicate on the "block_hash" field.
func BlockHashGT(v string) predicate.EVMEvent {
	return predicate.EVMEvent(sql.FieldGT(FieldBlockHash, v))
}

// BlockHashGTE applies the GTE predicate on the "block_hash" field.
func BlockHashGTE(v string) predicate.EVMEvent {
	return predicate.EVMEvent(sql.FieldGTE(FieldBlockHash, v))
}

// BlockHashLT applies the LT predicate on the "block_hash" field.
func BlockHashLT(v string) predicate.EVMEvent {
	return predicate.EVMEvent(sql.FieldLT(FieldBlockHash, v))
}

// BlockHashLTE applies the LTE predicate on the "block_hash" field.
func BlockHashLTE(v string) predicate.EVMEvent {
	return predicate.EVMEvent(sql.FieldLTE(FieldBlockHash, v))
}

// BlockHashContains applies the Contains predicate on the "block_hash" field.
func BlockHashContains(v string) predicate.EVMEvent {
	return predicate.EVMEvent(sql.FieldContains(FieldBlockHash, v))
}

// BlockHashHasPrefix applies the HasPrefix predicate on the "block_hash" field.
func BlockHashHasPrefix(v string) predicate.EVMEvent {
	return predicate.EVMEvent(sql.FieldHasPrefix(FieldBlockHash, v))
}

// BlockHashHasSuffix applies the HasSuffix predicate on the "block_hash" field.
func BlockHashHasSuffix(v string) predicate.EVMEvent {
	return predicate.EVMEvent(sql.FieldHasSuffix(FieldBlockHash, v))
}

// BlockHashEqualFold applies the EqualFold predicate on the "block_hash" field.
func BlockHashEqualFold(v string) predicate.EVMEvent {
	return predicate.EVMEvent(sql.FieldEqualFold(FieldBlockHash, v))
}

// BlockHashContainsFold applies the ContainsFold predicate on the "block_hash" field.
func BlockHashContainsFold(v string) predicate.EVMEvent {
	return predicate.EVMEvent(sql.FieldContainsFold(FieldBlockHash, v))
}

// BlockNumberEQ applies the EQ predicate on the "block_number" field.
func BlockNumberEQ(v uint64) predicate.EVMEvent {
	return predicate.EVMEvent(sql.FieldEQ(FieldBlockNumber, v))
}

// BlockNumberNEQ applies the NEQ predicate on the "block_number" field.
func BlockNumberNEQ(v uint64) predicate.EVMEvent {
	return predicate.EVMEvent(sql.FieldNEQ(FieldBlockNumber, v))
}

// BlockNumberIn applies the In predicate on the "block_number" field.
func BlockNumberIn(vs ...uint64) predicate.EVMEvent {
	return predicate.EVMEvent(sql.FieldIn(FieldBlockNumber, vs...))
}

// BlockNumberNotIn applies the NotIn predicate on the "block_number" field.
func BlockNumberNotIn(vs ...uint64) predicate.EVMEvent {
	return predicate.EVMEvent(sql.FieldNotIn(FieldBlockNumber, vs...))
}

// BlockNumberGT applies the GT predicate on the "block_number" field.
func BlockNumberGT(v uint64) predicate.EVMEvent {
	return predicate.EVMEvent(sql.FieldGT(FieldBlockNumber, v))
}

// BlockNumberGTE applies the GTE predicate on the "block_number" field.
func BlockNumberGTE(v uint64) predicate.EVMEvent {
	return predicate.EVMEvent(sql.FieldGTE(FieldBlockNumber, v))
}

// BlockNumberLT applies the LT predicate on the "block_number" field.
func BlockNumberLT(v uint64) predicate.EVMEvent {
	return predicate.EVMEvent(sql.FieldLT(FieldBlockNumber, v))
}

// BlockNumberLTE applies the LTE predicate on the "block_number" field.
func BlockNumberLTE(v uint64) predicate.EVMEvent {
	return predicate.EVMEvent(sql.FieldLTE(FieldBlockNumber, v))
}

// LogIndexEQ applies the EQ predicate on the "log_index" field.
func LogIndexEQ(v uint64) predicate.EVMEvent {
	return predicate.EVMEvent(sql.FieldEQ(FieldLogIndex, v))
}

// LogIndexNEQ applies the NEQ predicate on the "log_index" field.
func LogIndexNEQ(v uint64) predicate.EVMEvent {
	return predicate.EVMEvent(sql.FieldNEQ(FieldLogIndex, v))
}

// LogIndexIn applies the In predicate on the "log_index" field.
func LogIndexIn(vs ...uint64) predicate.EVMEvent {
	return predicate.EVMEvent(sql.FieldIn(FieldLogIndex, vs...))
}

// LogIndexNotIn applies the NotIn predicate on the "log_index" field.
func LogIndexNotIn(vs ...uint64) predicate.EVMEvent {
	return predicate.EVMEvent(sql.FieldNotIn(FieldLogIndex, vs...))
}

// LogIndexGT applies the GT predicate on the "log_index" field.
func LogIndexGT(v uint64) predicate.EVMEvent {
	return predicate.EVMEvent(sql.FieldGT(FieldLogIndex, v))
}

// LogIndexGTE applies the GTE predicate on the "log_index" field.
func LogIndexGTE(v uint64) predicate.EVMEvent {
	return predicate.EVMEvent(sql.FieldGTE(FieldLogIndex, v))
}

// LogIndexLT applies the LT predicate on the "log_index" field.
func LogIndexLT(v uint64) predicate.EVMEvent {
	return predicate.EVMEvent(sql.FieldLT(FieldLogIndex, v))
}

// LogIndexLTE applies the LTE predicate on the "log_index" field.
func LogIndexLTE(v uint64) predicate.EVMEvent {
	return predicate.EVMEvent(sql.FieldLTE(FieldLogIndex, v))
}

// AddressEQ applies the EQ predicate on the "address" field.
func AddressEQ(v string) predicate.EVMEvent {
	return predicate.EVMEvent(sql.FieldEQ(FieldAddress, v))
}

// AddressNEQ applies the NEQ predicate on the "address" field.
func AddressNEQ(v string) predicate.EVMEvent {
	return predicate.EVMEvent(sql.FieldNEQ(FieldAddress, v))
}

// AddressIn applies the In predicate on the "address" field.
func AddressIn(vs ...string) predicate.EVMEvent {
	return predicate.EVMEvent(sql.FieldIn(FieldAddress, vs...))
}

// AddressNotIn applies the NotIn predicate on the "address" field.
func AddressNotIn(vs ...string) predicate.EVMEvent {
	return predicate.EVMEvent(sql.FieldNotIn(FieldAddress, vs...))
}

// AddressGT applies the GT predicate on the "address" field.
func AddressGT(v string) predicate.EVMEvent {
	return predicate.EVMEvent(sql.FieldGT(FieldAddress, v))
}

// AddressGTE applies the GTE predicate on the "address" field.
func AddressGTE(v string) predicate.EVMEvent {
	return predicate.EVMEvent(sql.FieldGTE(FieldAddress, v))
}

// AddressLT applies the LT predicate on the "address" field.
func AddressLT(v string) predicate.EVMEvent {
	return predicate.EVMEvent(sql.FieldLT(FieldAddress, v))
}

// AddressLTE applies the LTE predicate on the "address" field.
func AddressLTE(v string) predicate.EVMEvent {
	return predicate.EVMEvent(sql.FieldLTE(FieldAddress, v))
}

// AddressContains applies the Contains predicate on the "address" field.
func AddressContains(v string) predicate.EVMEvent {
	return predicate.EVMEvent(sql.FieldContains(FieldAddress, v))
}

// AddressHasPrefix applies the HasPrefix predicate on the "address" field.
func AddressHasPrefix(v string) predicate.EVMEvent {
	return predicate.EVMEvent(sql.FieldHasPrefix(FieldAddress, v))
}

// AddressHasSuffix applies the HasSuffix predicate on the "address" field.
func AddressHasSuffix(v string) predicate.EVMEvent {
	return predicate.EVMEvent(sql.FieldHasSuffix(FieldAddress, v))
}

// AddressEqualFold applies the EqualFold predicate on the "address" field.
func AddressEqualFold(v string) predicate.EVMEvent {
	return predicate.EVMEvent(sql.FieldEqualFold(FieldAddress, v))
}

// AddressContainsFold applies the ContainsFold predicate on the "address" field.
func AddressContainsFold(v string) predicate.EVMEvent {
	return predicate.EVMEvent(sql.FieldContainsFold(FieldAddress, v))
}

// Topic0EQ applies the EQ predicate on the "topic0" field.
func Topic0EQ(v string) predicate.EVMEvent {
	return predicate.EVMEvent(sql.FieldEQ(FieldTopic0, v))
}

// Topic0NEQ applies the NEQ predicate on the "topic0" field.
func Topic0NEQ(v string) predicate.EVMEvent {
	return predicate.EVMEvent(sql.FieldNEQ(FieldTopic0, v))
}

// Topic0In applies the In predicate on the "topic0" field.
func Topic0In(vs ...string) predicate.EVMEvent {
	return predicate.EVMEvent(sql.FieldIn(FieldTopic0, vs...))
}

// Topic0NotIn applies the NotIn predicate on the "topic0" field.
func Topic0NotIn(vs ...string) predicate.EVMEvent {
	return predicate.EVMEvent(sql.FieldNotIn(FieldTopic0, vs...))
}

// Topic0GT applies the GT predicate on the "topic0" field.
func Topic0GT(v string) predicate.EVMEvent {
	return predicate.EVMEvent(sql.FieldGT(FieldTopic0, v))
}

// Topic0GTE applies the GTE predicate on the "topic0" field.
func Topic0GTE(v string) predicate.EVMEvent {
	return predicate.EVMEvent(sql.FieldGTE(FieldTopic0, v))
}

// Topic0LT applies the LT predicate on the "topic0" field.
func Topic0LT(v string) predicate.EVMEvent {
	return predicate.EVMEvent(sql.FieldLT(FieldTopic0, v))
}

// Topic0LTE applies the LTE predicate on the "topic0" field.
func Topic0LTE(v string) predicate.EVMEvent {
	return predicate.EVMEvent(sql.FieldLTE(FieldTopic0, v))
}

// Topic0Contains applies the Contains predicate on the "topic0" field.
func Topic0Contains(v string) predicate.EVMEvent {
	return predicate.EVMEvent(sql.FieldContains(FieldTopic0, v))
}

// Topic0HasPrefix applies the HasPrefix predicate on the "topic0" field.
func Topic0HasPrefix(v string) predicate.EVMEvent {
	return predicate.EVMEvent(sql.FieldHasPrefix(FieldTopic0, v))
}

// Topic0HasSuffix applies the HasSuffix predicate on the "topic0" field.
func Topic0HasSuffix(v string) predicate.EVMEvent {
	return predicate.EVMEvent(sql.FieldHasSuffix(FieldTopic0, v))
}

// Topic0EqualFold applies the EqualFold predicate on the "topic0" field.
func Topic0EqualFold(v string) predicate.EVMEvent {
	return predicate.EVMEvent(sql.FieldEqualFold(FieldTopic0, v))
}

// Topic0ContainsFold applies the ContainsFold predicate on the "topic0" field.
func Topic0ContainsFold(v string) predicate.EVMEvent {
	return predicate.EVMEvent(sql.FieldContainsFold(FieldTopic0, v))
}

// Topic1EQ applies the EQ predicate on the "topic1" field.
func Topic1EQ(v string) predicate.EVMEvent {
	return predicate.EVMEvent(sql.FieldEQ(FieldTopic1, v))
}

// Topic1NEQ applies the NEQ predicate on the "topic1" field.
func Topic1NEQ(v string) predicate.EVMEvent {
	return predicate.EVMEvent(sql.FieldNEQ(FieldTopic1, v))
}

// Topic1In applies the In predicate on the "topic1" field.
func Topic1In(vs ...string) predicate.EVMEvent {
	return predicate.EVMEvent(sql.FieldIn(FieldTopic1, vs...))
}

// Topic1NotIn applies the NotIn predicate on the "topic1" field.
func Topic1NotIn(vs ...string) predicate.EVMEvent {
	return predicate.EVMEvent(sql.FieldNotIn(FieldTopic1, vs...))
}

// Topic1GT applies the GT predicate on the "topic1" field.
func Topic1GT(v string) predicate.EVMEvent {
	return predicate.EVMEvent(sql.FieldGT(FieldTopic1, v))
}

// Topic1GTE applies the GTE predicate on the "topic1" field.
func Topic1GTE(v string) predicate.EVMEvent {
	return predicate.EVMEvent(sql.FieldGTE(FieldTopic1, v))
}

// Topic1LT applies the LT predicate on the "topic1" field.
func Topic1LT(v string) predicate.EVMEvent {
	return predicate.EVMEvent(sql.FieldLT(FieldTopic1, v))
}

// Topic1LTE applies the LTE predicate on the "topic1" field.
func Topic1LTE(v string) predicate.EVMEvent {
	return predicate.EVMEvent(sql.FieldLTE(FieldTopic1, v))
}

// Topic1Contains applies the Contains predicate on the "topic1" field.
func Topic1Contains(v string) predicate.EVMEvent {
	return predicate.EVMEvent(sql.FieldContains(FieldTopic1, v))
}

// Topic1HasPrefix applies the HasPrefix predicate on the "topic1" field.
func Topic1HasPrefix(v string) predicate.EVMEvent {
	return predicate.EVMEvent(sql.FieldHasPrefix(FieldTopic1, v))
}

// Topic1HasSuffix applies the HasSuffix predicate on the "topic1" field.
func Topic1HasSuffix(v string) predicate.EVMEvent {
	return predicate.EVMEvent(sql.FieldHasSuffix(FieldTopic1, v))
}

// Topic1EqualFold applies the EqualFold predicate on the "topic1" field.
func Topic1EqualFold(v string) predicate.EVMEvent {
	return predicate.EVMEvent(sql.FieldEqualFold(FieldTopic1, v))
}

// Topic1ContainsFold applies the ContainsFold predicate on the "topic1" field.
func Topic1ContainsFold(v string) predicate.EVMEvent {
	return predicate.EVMEvent(sql.FieldContainsFold(FieldTopic1, v))
}

// Topic2EQ applies the EQ predicate on the "topic2" field.
func Topic2EQ(v string) predicate.EVMEvent {
	return predicate.EVMEvent(sql.FieldEQ(FieldTopic2, v))
}

// Topic2NEQ applies the NEQ predicate on the "topic2" field.
func Topic2NEQ(v string) predicate.EVMEvent {
	return predicate.EVMEvent(sql.FieldNEQ(FieldTopic2, v))
}

// Topic2In applies the In predicate on the "topic2" field.
func Topic2In(vs ...string) predicate.EVMEvent {
	return predicate.EVMEvent(sql.FieldIn(FieldTopic2, vs...))
}

// Topic2NotIn applies the NotIn predicate on the "topic2" field.
func Topic2NotIn(vs ...string) predicate.EVMEvent {
	return predicate.EVMEvent(sql.FieldNotIn(FieldTopic2, vs...))
}

// Topic2GT applies the GT predicate on the "topic2" field.
func Topic2GT(v string) predicate.EVMEvent {
	return predicate.EVMEvent(sql.FieldGT(FieldTopic2, v))
}

// Topic2GTE applies the GTE predicate on the "topic2" field.
func Topic2GTE(v string) predicate.EVMEvent {
	return predicate.EVMEvent(sql.FieldGTE(FieldTopic2, v))
}

// Topic2LT applies the LT predicate on the "topic2" field.
func Topic2LT(v string) predicate.EVMEvent {
	return predicate.EVMEvent(sql.FieldLT(FieldTopic2, v))
}

// Topic2LTE applies the LTE predicate on the "topic2" field.
func Topic2LTE(v string) predicate.EVMEvent {
	return predicate.EVMEvent(sql.FieldLTE(FieldTopic2, v))
}

// Topic2Contains applies the Contains predicate on the "topic2" field.
func Topic2Contains(v string) predicate.EVMEvent {
	return predicate.EVMEvent(sql.FieldContains(FieldTopic2, v))
}

// Topic2HasPrefix applies the HasPrefix predicate on the "topic2" field.
func Topic2HasPrefix(v string) predicate.EVMEvent {
	return predicate.EVMEvent(sql.FieldHasPrefix(FieldTopic2, v))
}

// Topic2HasSuffix applies the HasSuffix predicate on the "topic2" field.
func Topic2HasSuffix(v string) predicate.EVMEvent {
	return predicate.EVMEvent(sql.FieldHasSuffix(FieldTopic2, v))
}

// Topic2EqualFold applies the EqualFold predicate on the "topic2" field.
func Topic2EqualFold(v string) predicate.EVMEvent {
	return predicate.EVMEvent(sql.FieldEqualFold(FieldTopic2, v))
}

// Topic2ContainsFold applies the ContainsFold predicate on the "topic2" field.
func Topic2ContainsFold(v string) predicate.EVMEvent {
	return predicate.EVMEvent(sql.FieldContainsFold(FieldTopic2, v))
}

// Topic3EQ applies the EQ predicate on the "topic3" field.
func Topic3EQ(v string) predicate.EVMEvent {
	return predicate.EVMEvent(sql.FieldEQ(FieldTopic3, v))
}

// Topic3NEQ applies the NEQ predicate on the "topic3" field.
func Topic3NEQ(v string) predicate.EVMEvent {
	return predicate.EVMEvent(sql.FieldNEQ(FieldTopic3, v))
}

// Topic3In applies the In predicate on the "topic3" field.
func Topic3In(vs ...string) predicate.EVMEvent {
	return predicate.EVMEvent(sql.FieldIn(FieldTopic3, vs...))
}

// Topic3NotIn applies the NotIn predicate on the "topic3" field.
func Topic3NotIn(vs ...string) predicate.EVMEvent {
	return predicate.EVMEvent(sql.FieldNotIn(FieldTopic3, vs...))
}

// Topic3GT applies the GT predicate on the "topic3" field.
func Topic3GT(v string) predicate.EVMEvent {
	return predicate.EVMEvent(sql.FieldGT(FieldTopic3, v))
}

// Topic3GTE applies the GTE predicate on the "topic3" field.
func Topic3GTE(v string) predicate.EVMEvent {
	return predicate.EVMEvent(sql.FieldGTE(FieldTopic3, v))
}

// Topic3LT applies the LT predicate on the "topic3" field.
func Topic3LT(v string) predicate.EVMEvent {
	return predicate.EVMEvent(sql.FieldLT(FieldTopic3, v))
}

// Topic3LTE applies the LTE predicate on the "topic3" field.
func Topic3LTE(v string) predicate.EVMEvent {
	return predicate.EVMEvent(sql.FieldLTE(FieldTopic3, v))
}

// Topic3Contains applies the Contains predicate on the "topic3" field.
func Topic3Contains(v string) predicate.EVMEvent {
	return predicate.EVMEvent(sql.FieldContains(FieldTopic3, v))
}

// Topic3HasPrefix applies the HasPrefix predicate on the "topic3" field.
func Topic3HasPrefix(v string) predicate.EVMEvent {
	return predicate.EVMEvent(sql.FieldHasPrefix(FieldTopic3, v))
}

// Topic3HasSuffix applies the HasSuffix predicate on the "topic3" field.
func Topic3HasSuffix(v string) predicate.EVMEvent {
	return predicate.EVMEvent(sql.FieldHasSuffix(FieldTopic3, v))
}

// Topic3EqualFold applies the EqualFold predicate on the "topic3" field.
func Topic3EqualFold(v string) predicate.EVMEvent {
	return predicate.EVMEvent(sql.FieldEqualFold(FieldTopic3, v))
}

// Topic3ContainsFold applies the ContainsFold predicate on the "topic3" field.
func Topic3ContainsFold(v string) predicate.EVMEvent {
	return predicate.EVMEvent(sql.FieldContainsFold(FieldTopic3, v))
}

// DataEQ applies the EQ predicate on the "data" field.
func DataEQ(v string) predicate.EVMEvent {
	return predicate.EVMEvent(sql.FieldEQ(FieldData, v))
}

// DataNEQ applies the NEQ predicate on the "data" field.
func DataNEQ(v string) predicate.EVMEvent {
	return predicate.EVMEvent(sql.FieldNEQ(FieldData, v))
}

// DataIn applies the In predicate on the "data" field.
func DataIn(vs ...string) predicate.EVMEvent {
	return predicate.EVMEvent(sql.FieldIn(FieldData, vs...))
}

// DataNotIn applies the NotIn predicate on the "data" field.
func DataNotIn(vs ...string) predicate.EVMEvent {
	return predicate.EVMEvent(sql.FieldNotIn(FieldData, vs...))
}

// DataGT applies the GT predicate on the "data" field.
func DataGT(v string) predicate.EVMEvent {
	return predicate.EVMEvent(sql.FieldGT(FieldData, v))
}

// DataGTE applies the GTE predicate on the "data" field.
func DataGTE(v string) predicate.EVMEvent {
	return predicate.EVMEvent(sql.FieldGTE(FieldData, v))
}

// DataLT applies the LT predicate on the "data" field.
func DataLT(v string) predicate.EVMEvent {
	return predicate.EVMEvent(sql.FieldLT(FieldData, v))
}

// DataLTE applies the LTE predicate on the "data" field.
func DataLTE(v string) predicate.EVMEvent {
	return predicate.EVMEvent(sql.FieldLTE(FieldData, v))
}

// DataContains applies the Contains predicate on the "data" field.
func DataContains(v string) predicate.EVMEvent {
	return predicate.EVMEvent(sql.FieldContains(FieldData, v))
}

// DataHasPrefix applies the HasPrefix predicate on the "data" field.
func DataHasPrefix(v string) predicate.EVMEvent {
	return predicate.EVMEvent(sql.FieldHasPrefix(FieldData, v))
}

// DataHasSuffix applies the HasSuffix predicate on the "data" field.
func DataHasSuffix(v string) predicate.EVMEvent {
	return predicate.EVMEvent(sql.FieldHasSuffix(FieldData, v))
}

// DataEqualFold applies the EqualFold predicate on the "data" field.
func DataEqualFold(v string) predicate.EVMEvent {
	return predicate.EVMEvent(sql.FieldEqualFold(FieldData, v))
}

// DataContainsFold applies the ContainsFold predicate on the "data" field.
func DataContainsFold(v string) predicate.EVMEvent {
	return predicate.EVMEvent(sql.FieldContainsFold(FieldData, v))
}

// TimestampEQ applies the EQ predicate on the "timestamp" field.
func TimestampEQ(v time.Time) predicate.EVMEvent {
	return predicate.EVMEvent(sql.FieldEQ(FieldTimestamp, v))
}

// TimestampNEQ applies the NEQ predicate on the "timestamp" field.
func TimestampNEQ(v time.Time) predicate.EVMEvent {
	return predicate.EVMEvent(sql.FieldNEQ(FieldTimestamp, v))
}

// TimestampIn applies the In predicate on the "timestamp" field.
func TimestampIn(vs ...time.Time) predicate.EVMEvent {
	return predicate.EVMEvent(sql.FieldIn(FieldTimestamp, vs...))
}

// TimestampNotIn applies the NotIn predicate on the "timestamp" field.
func TimestampNotIn(vs ...time.Time) predicate.EVMEvent {
	return predicate.EVMEvent(sql.FieldNotIn(FieldTimestamp, vs...))
}

// TimestampGT applies the GT predicate on the "timestamp" field.
func TimestampGT(v time.Time) predicate.EVMEvent {
	return predicate.EVMEvent(sql.FieldGT(FieldTimestamp, v))
}

// TimestampGTE applies the GTE predicate on the "timestamp" field.
func TimestampGTE(v time.Time) predicate.EVMEvent {
	return predicate.EVMEvent(sql.FieldGTE(FieldTimestamp, v))
}

// TimestampLT applies the LT predicate on the "timestamp" field.
func TimestampLT(v time.Time) predicate.EVMEvent {
	return predicate.EVMEvent(sql.FieldLT(FieldTimestamp, v))
}

// TimestampLTE applies the LTE predicate on the "timestamp" field.
func TimestampLTE(v time.Time) predicate.EVMEvent {
	return predicate.EVMEvent(sql.FieldLTE(FieldTimestamp, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.EVMEvent) predicate.EVMEvent {
	return predicate.EVMEvent(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.EVMEvent) predicate.EVMEvent {
	return predicate.EVMEvent(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.EVMEvent) predicate.EVMEvent {
	return predicate.EVMEvent(sql.NotPredicates(p))
}
