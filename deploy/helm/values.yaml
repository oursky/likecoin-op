cosmosLikeCoinNetworkConfig:
  name: likecoin-network

evmLikeCoinChainConfig:
  name: evm-likecoin-chain

likecoinMigration:
  name: likecoin-migration

  container:
    imageRepository: likecoin/likecoin-migration
    imagePullPolicy: IfNotPresent
    port: 80
    restartPolicy: Always

  service:
    port: 80
  ingress:
    prefix: /
    tls:
      secretName: tls-likecoin-migration

  resources: {}

likenftMigration:
  name: likenft-migration

  container:
    imageRepository: likecoin/likenft-migration
    imagePullPolicy: IfNotPresent
    port: 80
    restartPolicy: Always

  service:
    port: 80
  ingress:
    prefix: /
    tls:
      secretName: tls-likenft-migration

  resources: {}

migrationAdmin:
  name: migration-admin
  
  initContainer:
    imageRepository: nginx:alpine
    imagePullPolicy: IfNotPresent
    
  container:
    imageRepository: likecoin/migration-admin
    imagePullPolicy: IfNotPresent
    port: 80
    restartPolicy: Always

  service:
    port: 80
  ingress:
    prefix: /
    adminPrefix: /admin
    tls:
      secretName: tls-migration-admin

  resources: {}

migrationBackend:
  ingress:
    prefix: /
    tls:
      secretName: tls-migration-backend

migrationBackendOp:
  name: migration-backend-op
  env:
    BATCH_MINT_ITEM_PER_PAGE: "10"
    CLASS_MIGRATION_ESTIMATED_DURATION_SECONDS: "2"
    NFT_MIGRATION_ESTIMATED_DURATION_SECONDS: "2"
    SHOULD_PREMINT_ALL_NFTS_WHEN_NEW_CLASS: "true"
    PREMINT_ALL_NFTS_WHEN_NEW_CLASS_SHOULD_PREMINT_ARBITRARY_NFTIDS: "false"

  container:
    imageRepository: likecoin/like-migration-backend
    imagePullPolicy: IfNotPresent
    port: 8091

  migrate: {}

  service:
    port: 80
  ingress:
    prefix: /
    adminPrefix: /admin

  resources: {}

  worker:
    name: migration-backend-worker-op

    resources: {}

  scheduler:
    name: migration-backend-scheduler-op

    resources: {}

migrationBackendBase:
  name: migration-backend-base
  env:
    BATCH_MINT_ITEM_PER_PAGE: "10"
    CLASS_MIGRATION_ESTIMATED_DURATION_SECONDS: "2"
    NFT_MIGRATION_ESTIMATED_DURATION_SECONDS: "2"
    SHOULD_PREMINT_ALL_NFTS_WHEN_NEW_CLASS: "true"
    PREMINT_ALL_NFTS_WHEN_NEW_CLASS_SHOULD_PREMINT_ARBITRARY_NFTIDS: "false"

  container:
    imageRepository: likecoin/like-migration-backend
    imagePullPolicy: IfNotPresent
    port: 8091

  migrate: {}

  service:
    port: 80
  ingress:
    prefix: /
    adminPrefix: /admin

  resources: {}

  worker:
    name: migration-backend-worker-base

    resources: {}

  scheduler:
    name: migration-backend-scheduler-base

    resources: {}

signerBackendOp:
  name: signer-backend-op

  migrate:
    backoffLimit: {}

  container:
    imageRepository: likecoin/like-signer-backend
    imagePullPolicy: IfNotPresent
    port: 8091

  service:
    port: 80

  resources: {}

signerBackendBase:
  name: signer-backend-base

  migrate:
    backoffLimit: {}

  container:
    imageRepository: likecoin/like-signer-backend
    imagePullPolicy: IfNotPresent
    port: 8091

  service:
    port: 80

  resources: {}

likenftIndexer:
  name: likenft-indexer

  container:
    imageRepository: likecoin/likenft-indexer
    imagePullPolicy: IfNotPresent

  migrate: {}

  api:
    name: likenft-indexer-api

    container:
      port: 8091

    service:
      port: 80
    ingress:
      prefix: /
      tls:
        secretName: tls-likenft-indexer

    resources: {}

  worker:
    name: likenft-indexer-worker

    deployments:
      periodic:
        resources: {}
        tasks:
          - acquire-book-nft-events
          - acquire-like-protocol-events
          - check-like-protocol
          - check-received-evm-events
      check-book-nfts:
        resources: {}
        tasks:
          - check-book-nfts
          - acquire-book-nft-events-with-lifecycle
      process-evm-event:
        resources: {}
        tasks:
          - process-evm-event
      index-action-request:
        resources: {}
        tasks:
          - index-action-check-book-nft
          - index-action-check-like-protocol
      index-action-process-evm-event:
        resources: {}
        tasks:
          - index-action-process-evm-event
          - index-action-check-received-evm-events

  scheduler:
    name: likenft-indexer-scheduler

    deployments:
      all-in-one:
        cron: "*/1 * * * *"
        tasks:
          - check-book-nfts
          - check-like-protocol
          - check-received-evm-events
        resources: {}

likecollectiveIndexer:
  name: likecollective-indexer

  container:
    imageRepository: likecoin/likecollective-indexer
    imagePullPolicy: IfNotPresent

  migrate: {}

  api:
    name: likecollective-indexer-api

    container:
      port: 8091

    service:
      port: 80

    ingress:
      prefix: /
      tls:
        secretName: tls-likecollective-indexer

    resources: {}

  worker:
    name: likecollective-indexer-worker

    deployments:
      periodic:
        resources: {}
        tasks:
          - check-received-evm-events
      process-evm-event:
        resources: {}
        tasks:
          - process-evm-event

  scheduler:
    name: likecollective-indexer-scheduler

    deployments:
      all-in-one:
        cron: "*/1 * * * *"
        tasks:
          - check-received-evm-events
        resources: {}

  timescaleDb:
    name: likecollective-indexer-timescale-db

    container:
      image: timescale/timescaledb-ha:pg16
      imagePullPolicy: IfNotPresent
      port: 5432

    service:
      port: 5432

    psqlVolume:
      storage: 30Gi
      storageClass: standard-rwo

    resources: {}

redis:
  name: redis
  container:
    imageRepository: redis
    imageVersion: 7
    port: 6379

  service:
    port: 6379

  resources: {}

nginx:
  name: nginx

  container:
    image: nginx
    imagePullPolicy: IfNotPresent
    port: 8000
    restartPolicy: Always

  service:
    port: 80

ingress:
  name: likecoin-op

  className: "nginx"

  annotations:
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
    nginx.ingress.kubernetes.io/use-regex: "true"
